"/*"
"Calculate Circle Area using Java Example"
"This Calculate Circle Area using Java Example shows how to calculate"
"area of circle using it's radius."
"*/"
""
"import java.io.BufferedReader;"
"import java.io.IOException;"
"import java.io.InputStreamReader;"
""
"public class CalculateCircleAreaExample {"
""
"public static void main(String[] args) {"
""
"int radius = 0;"
"System.out.println(""Please enter radius of a circle"");"
""
"try"
"{"
"//get the radius from console"
"BufferedReader br = new BufferedReader(new InputStreamReader(System.in));"
"radius = Integer.parseInt(br.readLine());"
"}"
"//if invalid value was entered"
"catch(NumberFormatException ne)"
"{"
"System.out.println(""Invalid radius value"" + ne);"
"System.exit(0);"
"}"
"catch(IOException ioe)"
"{"
"System.out.println(""IO Error :"" + ioe);"
"System.exit(0);"
"}"
""
"/*"
"* Area of a circle is"
"* pi * r * r"
"* where r is a radius of a circle."
"*/"
""
"//NOTE : use Math.PI constant to get value of pi"
"double area = Math.PI * radius * radius;"
""
"System.out.println(""Area of a circle is "" + area);"
"}"
"}"
""
"/*"
"Output of Calculate Circle Area using Java Example would be"
"Please enter radius of a circle"
"19"
"Area of a circle is 1134.1149479459152"
"*/"
""
"@@@@"
""
"/*"
"Calculate Rectangle Area using Java Example"
"This Calculate Rectangle Area using Java Example shows how to calculate"
"area of Rectangle using it's length and width."
"*/"
""
"import java.io.BufferedReader;"
"import java.io.IOException;"
"import java.io.InputStreamReader;"
""
"public class CalculateRectArea {"
""
"public static void main(String[] args) {"
""
"int width = 0;"
"int length = 0;"
""
"try"
"{"
"//read the length from console"
"BufferedReader br = new BufferedReader(new InputStreamReader(System.in));"
""
"System.out.println(""Please enter length of a rectangle"");"
"length = Integer.parseInt(br.readLine());"
""
"//read the width from console"
"System.out.println(""Please enter width of a rectangle"");"
"width = Integer.parseInt(br.readLine());"
""
""
"}"
"//if invalid value was entered"
"catch(NumberFormatException ne)"
"{"
"System.out.println(""Invalid value"" + ne);"
"System.exit(0);"
"}"
"catch(IOException ioe)"
"{"
"System.out.println(""IO Error :"" + ioe);"
"System.exit(0);"
"}"
""
"/*"
"* Area of a rectangle is"
"* length * width"
"*/"
""
"int area = length * width;"
""
"System.out.println(""Area of a rectangle is "" + area);"
"}"
""
"}"
""
"/*"
"Output of Calculate Rectangle Area using Java Example would be"
"Please enter length of a rectangle"
"10"
"Please enter width of a rectangle"
"15"
"Area of a rectangle is 150"
"*/"
""
"@@@@"
""
"/*"
"Java Factorial Using Recursion Example"
"This Java example shows how to generate factorial of a given number"
"using recursive function."
"*/"
""
"import java.io.BufferedReader;"
"import java.io.IOException;"
"import java.io.InputStreamReader;"
""
"public class JavaFactorialUsingRecursion {"
""
"public static void main(String args[]) throws NumberFormatException, IOException{"
""
"System.out.println(""Enter the number: "");"
""
"//get input from the user"
"BufferedReader br=new BufferedReader(new InputStreamReader(System.in));"
"int a = Integer.parseInt(br.readLine());"
""
"//call the recursive function to generate factorial"
"int result= fact(a);"
""
""
"System.out.println(""Factorial of the number is: "" + result);"
"}"
""
"static int fact(int b)"
"{"
"if(b <= 1)"
"//if the number is 1 then return 1"
"return 1;"
"else"
"//else call the same function with the value - 1"
"return b * fact(b-1);"
"}"
"}"
""
"/*"
"Output of this Java example would be"
""
"Enter the number:"
"5"
"Factorial of the number is: 120"
"*/"
""
"@@@@"
""
"/*"
"Swap Numbers Without Using Third Variable Java Example"
"This Swap Numbers Java Example shows how to"
"swap value of two numbers without using third variable using java."
"*/"
""
"public class SwapElementsWithoutThirdVariableExample {"
""
"public static void main(String[] args) {"
""
"int num1 = 10;"
"int num2 = 20;"
""
"System.out.println(""Before Swapping"");"
"System.out.println(""Value of num1 is :"" + num1);"
"System.out.println(""Value of num2 is :"" +num2);"
""
"//add both the numbers and assign it to first"
"num1 = num1 + num2;"
"num2 = num1 - num2;"
"num1 = num1 - num2;"
""
"System.out.println(""Before Swapping"");"
"System.out.println(""Value of num1 is :"" + num1);"
"System.out.println(""Value of num2 is :"" +num2);"
"}"
""
""
"}"
""
"/*"
"Output of Swap Numbers Without Using Third Variable example would be"
"Before Swapping"
"Value of num1 is :10"
"Value of num2 is :20"
"Before Swapping"
"Value of num1 is :20"
"Value of num2 is :10"
"*/"
""
"@@@@"
""
"// OddEven.java"
"import javax.swing.JOptionPane;"
""
"public class OddEven {"
"/**"
"* ""input"" is the number that the user gives to the computer"
"*/"
"private int input; // a whole number(""int"" means integer)"
""
"/**"
"* This is the constructor method. It gets called when an object of the OddEven type"
"* is being created."
"*/"
"public OddEven() {"
"/*"
"* In most Java programs constructors can initialize objects with default values, or create"
"* other objects that this object might use to perform its functions. In some Java programs, the"
"* constructor may simply be an empty function if nothing needs to be initialized prior to the"
"* functioning of the object. In this program's case, an empty constructor would suffice."
"* A constructor must exist; however, if the user doesn't put one in then the compiler"
"* will create an empty one."
"*/"
"}"
""
"/**"
"* This is the main method. It gets called when this class is run through a Java interpreter."
"* @param args command line arguments (unused)"
"*/"
"public static void main(final String[] args) {"
"/*"
"* This line of code creates a new instance of this class called ""number"" (also known as an"
"* Object) and initializes it by calling the constructor. The next line of code calls"
"* the ""showDialog()"" method, which brings up a prompt to ask you for a number"
"*/"
"OddEven number = new OddEven();"
"number.showDialog();"
"}"
""
"public void showDialog() {"
"/*"
"* ""try"" makes sure nothing goes wrong. If something does,"
"* the interpreter skips to ""catch"" to see what it should do."
"*/"
"try {"
"/*"
"* The code below brings up a JOptionPane, which is a dialog box"
"* The String returned by the ""showInputDialog()"" method is converted into"
"* an integer, making the program treat it as a number instead of a word."
"* After that, this method calls a second method, calculate() that will"
"* display either ""Even"" or ""Odd."""
"*/"
"this.input = Integer.parseInt(JOptionPane.showInputDialog(""Please enter a number.""));"
"this.calculate();"
"} catch (final NumberFormatException e) {"
"/*"
"* Getting in the catch block means that there was a problem with the format of"
"* the number. Probably some letters were typed in instead of a number."
"*/"
"System.err.println(""ERROR: Invalid input. Please type in a numerical value."");"
"}"
"}"
""
"/**"
"* When this gets called, it sends a message to the interpreter."
"* The interpreter usually shows it on the command prompt (For Windows users)"
"* or the terminal (For *nix users).(Assuming it's open)"
"*/"
"private void calculate() {"
"if ((this.input % 2) == 0) {"
"JOptionPane.showMessageDialog(null, ""Even"");"
"} else {"
"JOptionPane.showMessageDialog(null, ""Odd"");"
"}"
"}"
"}"
"/*"
"@Getter"
"@Setter"
"@AllArgsConstructor"
"*/"
""
"public class Customer{"
"public int ID;"
"public String FullName;"
"public Address address;"
"}"
""
"public class Address{"
"public int postalCode;"
"public String city;"
"public String state;"
""
"}"
"/*"
"@Getter"
"@Setter"
"@AllArgsConstructor"
"*/"
""
"public class Lecturers{"
"public int ID;"
"public String FName;"
"public String LName;"
"public String DOB;"
"public Address address;"
"}"
""
"public class Address{"
"public int postalCode;"
"public String city;"
"public String state;"
"public String country;"
"}"
"public class teacher {"
"private String getName;"
"private int setName;"
"private int id;"
""
"float getID;"
"float setID;"
""
"public int userID;"
"public String teacherName;"
"}"
"public class teacher {"
"    public static void main(String[] args) {"
"        int id = 0;"
"       int name = 0;"
" "
"        try {"
"            id = Integer.parseInt(args[0]);"
"            name = Integer.parseInt(args[1]);"
"        } catch (NumberFormatException getID) {"
"            System.out.println(""One of the arguments are not number."" +"
"                              ""Program exits."");"
"            return;"
"        }"
" "
"        int Tname = id + name;"
" "
"        System.out.println(""Sum = "" + Tname);"
"   }"
"}"
"public class Phone1 {"
"private final String unformattedNumber1;"
""
"public Phone1(String unformattedNumber1) {"
"this.unformattedNumber1 = unformattedNumber1;"
"}"
""
"private String getAreaCode1() {"
"return unformattedNumber1.substring(0,3);"
"}"
""
"private String getPrefix1() {"
"return unformattedNumber1.substring(3,6);"
"}"
""
"private String getNumber1() {"
"return unformattedNumber1.substring(6,10);"
"}"
""
"public String toFormattedString1() {		return ""("" + getAreaCode1() + "") "" + getPrefix1() + ""-"" + getNumber1();"
"}"
"}"
""
"public class Customer1{"
"private Phone1 mobilePhone1;"
""
"public String getMobilePhoneNumber1() {"
"return mobilePhone1.toFormattedString1();"
"}"
"}"
"public class Account1{"
""
"private String type1;"
"private String accountNumber1;"
"private int amount1;"
""
"public Account1(Sting type1,String accountNumber1,int amount1)"
"{"
"this.amount1=amount1;"
"this.type1=type1;"
"this.accountNumber1=accountNumber1;"
"}"
""
""
"public void debit1(int debit1) throws Exception"
"{"
"if(amount1 <= 500)"
"{"
"throw new Exception(""Minimum balance should be over 500"");"
"}"
""
"amount1= amount1-debit1;"
"System.out.println(""Now amount is"" + amount1);"
"}"
""
"public void transfer(Acount from1,Acount to1,int creditAmount1) throws Exception"
"{"
"if(from1.amount1 <= 500)"
"{"
"throw new Exception(""Minimum balance should be over 500"");"
"}"
""
"public void sendWarningMessage1()"
"{"
"if(amount1 <= 500)"
"{"
"System.out.println(""amount should be over 500"");"
"}"
"}"
""
""
""
"}"
""
"public class ShotgunSurgery01 {"
""
"public static void main(String[] args) throws Exception {"
"Acount acc1 = new Account(""Personal"",""AC1234"",1000);"
"acc1.debit1(500);"
"acc1.sendWarningMassage1();"
""
"}"
""
"}"
"}"
"class MNO {"
"private String msg=""Try to access the private variable outside the class"";"
"}"
""
"public class CMPrivate0{"
"public static void main(String[] args) {"
"MNO a=new MNO();"
"System.out.println(a.msg);"
""
"}"
""
"}"
"import java.util.*;"
"public class teacher{"
"private int id;"
"private String name;"
""
"public teacher(){"
""
"}"
""
"public teacher(int userID, String Tname){"
"id = userID;"
"name = Tname;"
"}"
""
"public int getID(){"
"return this.id;"
"}"
""
"public void setID(int tID){"
"this.id = tID;"
"}"
""
"public String getName(){"
"return this.name;"
"}"
""
"public void setName(String teacherName){"
"this.name = teacherName;"
"}"
""
"public void displayDetails(){"
"System.out.println(""The Student Name is "" +name+ "" and the Student ID number is "" +id+ "". These details are inserted in a seperate function in the program"")"
"}"
"}"
"public class TryCatch1 {"
""
"public static void main(String[] args) {"
"try"
"{"
"int data=50/0; //may throw exception"
"}"
"//handling the exception"
"catch(ArithmeticException e)"
"{"
"System.out.println(e);"
"}"
"System.out.println(""This is try catch 01"");"
"}"
""
"}"
